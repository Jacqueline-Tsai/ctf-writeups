from Crypto.Util.number import *
from Crypto import Random
import Crypto
import sys
import libnum

mod=[84610636390190255687357766877620301551071238705225645301130472652663764934133829532091034769786077996701906975959492366533991347392388449222456243446827152113352498415543223102937638430477613692328328996587364946249822517552559430433583217722045038047761928546991133809673515948145678543700931838901077223087, 47724338660411347615834313736881760244001599735378738042655797668953290183334818868243589778135538468903973476429072730492354706047264980814881206364753624849464181201336525928200527089342111584048185617195564840160397799140042131062443832931411311767472312590426126157191935490896590556250410266589737005551, 63867699818386667919162920750742420803093968576992524245990805771875520649333348086869899256514574940211898235278076569385985768294047951077312498218198698424813968254586794312404718953467054115340810531429933009739550563245534825260523878503090566992026167627671478056091557309721600449161375184141985226889, 67682432447972291346142762574801584928448721862460995241999275232420927498084943189374013094252839464981372396451808101853697685071760111994649213007392699464277139452595148577279872918833123417984721067245869747136312912009817974970917038208006164193229692627867514336306102275431236969721685895094616550973, 115388351516687755812999953419496557961445994952852131697613802916290975697167504358120773996870196357655192685973565037885740525927097449246173831621533692941019216991696097879788360035741127976549112445744644408016068667467816183262861004263893177165580533586593319013795221986359673343686682134152931259169, 84854697175398642903113667973113792771976282302350224530897670456462588762871743923623593574468970405217863004916097034257357795432759044988515152335238116862537815292545050392684971779890785539613072058854764473876136288554650146403723402463652752544958929210408296397886189462222134767802869749736666533739, 139577333577497899527830194581652692293193969298446401129266763947420424009435623301450995696836664823145893624972630062774001815688937355802493632462390435740437694465976949514322774503954264801428914379568828263858265991815099958593581256801659241516793971292187620349952364739810437894202673207706047941371, 54788681748814407439508885859682957850198646847459749353183956962750414453255611397093000184730617709436806536839150806413645282472940210937589004586604620169303653674431509441388960556610050172942547445389394952988433709272775375147348870613410861802928711080273304219028113960717951560787198146089725662717, 130724446108429373988552475202131091190643191194771419494112009025000146259774459596993803757462834380953621311273269349379809810770710490675786022011496391053266346261378269697508511908503338805881051343322011998557759771291496513911368767026425449902905448412649754309502050990110017992359690761477623900513, 68238444698991287571926429877578200751144683889325050450478806867000512408404506945383347651596378181267518278296431786927696717781337904290794245056176119152893242001558886435422338697559009153490157085110606306322321640605408284385035461457101445332067344531928988881238878442558012055474057679666961037081]
rem=[61331768209345665885032439340261205021728442848800549542945176628969913228383623592516878916277114177350719909839311269515577896132098414181467770337126232308731778976875933214578860473601841176908325944382107455341673636250982432871937694260994057733294091241946404156447038821661058275592848019457242110019, 8479087949366727485551573792714456175521620147015668448459826371983431445054980833700148233910318699957749626487161295109179467415421341506882442760792839551601825663796848371245956689187965084500258986486587851106261373039079096475628355666078126233375603095837990399817566199429624294965517110813739751379, 28714143897811722350099679987600158845021040178360424194325911457141443842434996910766985240314191000202387893116497658998707045272119232135427715963474887014052572623192238407819128834520867009019092733673724556900389890026060894044489357997866369001223311128894698271457017119200819908777489588174882040869, 46577009252259843828182430708194812382095435579888836926550660383071887771926544935260168529513434667005541011733384005202446269280064797688801750625926633735455024635010712124650975938598286116142470993323848994667287671045341786115113125118834453009872088933293642646766703486017451029218361020001418976727, 69458510111809214663742658806925147997387040968019140156962045053266774156012642951261485158527562822301555797505109368211988863121142302848256277085452815322037477501052611346706805639816962691962847688219071096712236936347918303749694091351084550655582176583007164398701889933434159307256379731720694965566, 14912087251472352537715584124064854004927164359316670144977742624671769418076123735418619245160348488713000935521125104089013741324919323305734909603444805929564397342620294476293785568038691379322063885363834542956254913526692738515171403214766235718729781082560867633505691687909558353740008421740752026135, 110457108520344216136157647834867656572482286084355383089990825567899646257561343645924501577720412727674530024024303193412034058560305672032248298932445272629684060656082899216540579503707860130197650556919178212431476319606047973430761924860765028414401523666215663964350516345254157225695517367460939966955, 52819260793707630550252707451349704546841900299415292310261284265917513494553814114901297373997138059314205852538961639030712661341753492619293297835146670610536432960224641963943621200089112055488014179337978992882496821617598695072301279819726865092327116470989763211769660989135579871610118021104733844929, 51443954379804434343961326950715663984066613753839492356502851722251209039384355650215696090027771261048587773698289039842402062551838251117303513016306400004257354576232408236064446939768312017736676221421223975900141574781670910664131880771274799472412791188592728585506355889726522409218123283967669880513, 11724266280158072899071895530518168421399989912372914563905133158796622182197800929823287881229641682277288740453975790363356547951369247213193593336501763536309828693013307387555432614755739678818044325761980168872693472803069125583130439465050123712687254867055706463131650800154389895689840559451990545017]

res=libnum.solve_crt(rem,mod)
print("\n\nAnswer:")

print(f"\nWe can solved M^e with CRT to get {res}")
val=libnum.nroot(res,65537)
print(long_to_bytes(res))
print(f"If we assume e=3, we take the third root to get: {val}")
print(f"\nDecipher: {long_to_bytes(val)}")